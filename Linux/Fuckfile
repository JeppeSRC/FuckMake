!FuckMake

ROOT = ../

CC = g++

CFILES = GetFiles(src/,*.cpp,)

OutDir = bin/
ObjDir = %(OutDir)obj/

R_CFLAGS = -O3 -fopenmp -Wall -Wno-unused-result -fpermissive
D_CFLAGS = -g -fopenmp -Wall -Wno-unused-result -fpermissive -D_DEBUG
LFLAGS = -fopenmp

INC = -Isrc/

Compile_dbg {
    Msg(Compiling %Input)
    !%(CC) %(D_CFLAGS) %(INC) -c -o %Output %Input
}

Compile {
    Msg(Compiling %Input)
    !%(CC) %(R_CFLAGS) %(INC) -c -o %Output %Input
}

Link {
    Msg(Linking)
    !%(CC) %(LFLAGS) -o %Output %Input
}

debug:
    ExecuteList(Compile_dbg, %(CFILES), %(ObjDir)Debug/)
    Execute(Link, GetFiles(%(ObjDir)/Debug/,*.obj,), %(OutDir)Debug/FuckMake)

release:
    ExecuteList(Compile, %(CFILES), %(ObjDir))
    Execute(Link, GetFiles(%(ObjDir),*.obj,*/Debug/*), %(OutDir)FuckMake)


rebuild:
    DeleteFiles(GetFiles(%(ObjDir),*.obj,))
    ExecuteList(Compile_dbg, %(CFILES), %(ObjDir))
    Execute(Link, GetFiles(%(ObjDir),*.obj,), %(OutDir)FuckMake)
    