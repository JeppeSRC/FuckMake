!FuckMake

ROOT = ../

CC = g++

CFILES = GetFiles(src/,*.cpp)

OutDir = bin/
ObjDirDbg = %(OutDir)debug/
ObjDir = %(OutDir)release/

R_CFLAGS = -O3 -fopenmp -Wall -Wno-unused-result -fpermissive
D_CFLAGS = -g -fopenmp -Wall -Wno-unused-result -fpermissive -D_DEBUG
LFLAGS = -fopenmp

INC = -Isrc/

Compile_dbg {
    Msg(Compiling %Input)
    !%(CC) %(D_CFLAGS) %(INC) -c -o %Output %Input
}

Compile {
    Msg(Compiling %Input)
    !%(CC) %(R_CFLAGS) %(INC) -c -o %Output %Input
}

Link {
    Msg(Linking)
    !%(CC) %(LFLAGS) -o %Output %Input
}

debug:
    ExecuteList(Compile_dbg, %(CFILES), %(ObjDirDbg)/,src/)
    Execute(Link, GetFiles(%(ObjDirDbg),*.obj), %(OutDir)FuckMake)

release:
    ExecuteList(Compile, %(CFILES), %(ObjDir),src/)
    Execute(Link, GetFiles(%(ObjDir),*.obj), %(OutDir)FuckMake)


debug_rebuild:
    ExecuteTarget(clean_debug)
    ExecuteTarget(debug)

release_rebuild:
    ExecuteTarget(clean_release)
    ExecuteTarget(release)

clean:
    DeleteFiles(GetFiles(%(OutDir)))

clean_debug:
    DeleteFiles(GetFiles(%(ObjDirDbg),*.obj,))

clean_release:
    DeleteFiles(GetFiles(%(ObjDir),*.obj))
